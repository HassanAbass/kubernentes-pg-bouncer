apiVersion: v1
kind: ConfigMap
metadata:
  name: pgbouncer-config-ini
data:
  pgbouncer.ini: |
    [databases]
    * = host=postgres-service port=5432 user=postgres

    [pgbouncer]
    listen_addr = *
    listen_port = 6432
    unix_socket_dir =
    user = postgres
    auth_file = /etc/pgbouncer/userlist.txt
    auth_type = md5
    ignore_startup_parameters = extra_float_digits
    admin_users = postgres, admin
  userlist.txt: |
    "postgres" "SCRAM-SHA-256$4096:BwBnyMOVcAl8AbaDbbdhSA==$AICaQuGEbPSBuo0xsBtETVBBm3wrfZ5mu9vB2ECJAcU=:0F54miUYI/vJxalAgonWhmGqrwVZLxSMg//8ztDicBM="
    "postgres" "md553f48b7c4b76a86ce72276c5755f217d"

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /run/desktop/mnt/host/wsl/postgres-data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  volumeName: postgres-pv
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: LoadBalancer
  selector:
    app: pg-bouncer
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres-service

---

apiVersion: v1
kind: Service
metadata:
  name: pgbouncer-service
spec:
  type: LoadBalancer
  selector:
    app: pg-bouncer
  ports:
  - port: 6432
    targetPort: 6432

---

apiVersion: v1
kind: Service
metadata:
  name: adminer-service
spec:
  type: LoadBalancer
  selector:
    app: pg-bouncer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: adminer-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-bouncer
  labels:
    app: pg-bouncer
spec:
  selector:
    matchLabels:
      app: pg-bouncer
  template:
    metadata:
      labels:
        app: pg-bouncer
    spec:
      nodeName: docker-desktop
      containers:
        - name: postgres-db
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: secret
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_HOST_AUTH_METHOD
              value: md5
            - name: POSTGRES_INITDB_ARGS
              value: --auth=md5
          volumeMounts: 
            - name: postgres-data-v
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h localhost -p 5432
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h localhost -p 5432
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 1
        - name: pgbouncer
          image: edoburu/pgbouncer:latest
          volumeMounts:
            - name: pgbouncer-ini-v
              mountPath: /etc/pgbouncer/pgbouncer.ini
              subPath: pgbouncer.ini
            - name: pgbouncer-userlist-v
              mountPath: /etc/pgbouncer/userlist.txt
              subPath: userlist.txt
          ports:
            - containerPort: 6432
          env:
            - name: DB_HOST
              value: postgres-db
            - name: DB_PORT
              value: '5432'
            - name: DB_USER
              value: postgres
            - name: DB_PASSWORD
              value: secret
            - name: ADMIN_USERS
              value: postgres, admin
            - name: AUTH_TYPE
              value: md5
            - name: AUTH_FILE
              value: /etc/pgbouncer/userlist.txt
        - name: adminer
          image: adminer
          ports:
            - name: http
              containerPort: 8080
      volumes: 
        - name: postgres-data-v
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: pgbouncer-ini-v
          configMap:
            name: pgbouncer-config-ini
            items:
              - key: pgbouncer.ini
                path: pgbouncer.ini
        - name: pgbouncer-userlist-v
          configMap:
            name: pgbouncer-config-ini
            items:
              - key: userlist.txt
                path: userlist.txt
        
        # - name: nats-data-volume
        #   hostPath:
        #     path: /mnt/wsl/postgres-data
        #     type: DirectoryOrCreate